// test-flow-data.js
// üß™ Test para verificar que los datos del Flow se generan correctamente

require('dotenv').config();
const { appointmentService } = require('../../services/appointmentService');

console.log('üîç VERIFICANDO GENERACI√ìN DE DATOS PARA EL FLOW\n');

try {
    // Simular la generaci√≥n de datos igual que en sendAppointmentFlow
    const availableDates = appointmentService.generateAvailableDates(30);
    const services = [
        { id: 'consulta', name: 'Consulta General', duration: '30 min' },
        { id: 'diseno', name: 'Dise√±o Personalizado', duration: '60 min' },
        { id: 'reparacion', name: 'Reparaci√≥n', duration: '45 min' },
        { id: 'valoracion', name: 'Valoraci√≥n de Joyas', duration: '30 min' }
    ];

    const flowActionPayload = {
        data: {
            available_dates: availableDates.slice(0, 15), // Limitar para el Flow
            services: services,
            business_info: {
                name: 'Joyer√≠a Rimer',
                phone: process.env.WHATSAPP_PHONE_NUMBER_ID,
                hours: 'Lun-S√°b 9:00-18:00'
            },
            locations: [
                { id: 'cartagena', name: 'Cartagena', address: 'Centro Hist√≥rico' },
                { id: 'santa_marta', name: 'Santa Marta', address: 'Rodadero' }
            ]
        }
    };

    console.log('üìÖ FECHAS DISPONIBLES:');
    console.log(`Total generadas: ${availableDates.length}`);
    console.log(`Enviadas al Flow: ${flowActionPayload.data.available_dates.length}`);
    console.log('Primera fecha:', flowActionPayload.data.available_dates[0]);

    console.log('\nüõçÔ∏è SERVICIOS:');
    flowActionPayload.data.services.forEach((service, index) => {
        console.log(`${index + 1}. ${service.name} (${service.duration})`);
    });

    console.log('\nüè¢ UBICACIONES:');
    flowActionPayload.data.locations.forEach((location, index) => {
        console.log(`${index + 1}. ${location.name} - ${location.address}`);
    });

    console.log('\nüìã INFORMACI√ìN DEL NEGOCIO:');
    console.log(`Nombre: ${flowActionPayload.data.business_info.name}`);
    console.log(`Tel√©fono: ${flowActionPayload.data.business_info.phone}`);
    console.log(`Horarios: ${flowActionPayload.data.business_info.hours}`);

    console.log('\nüì§ ESTRUCTURA COMPLETA PARA EL FLOW:');
    console.log(JSON.stringify(flowActionPayload, null, 2));

    console.log('\n‚úÖ DATOS DEL FLOW GENERADOS CORRECTAMENTE');
    console.log('üìù La estructura incluye:');
    console.log(`   ‚Ä¢ ${flowActionPayload.data.available_dates.length} fechas disponibles`);
    console.log(`   ‚Ä¢ ${flowActionPayload.data.services.length} servicios`);
    console.log(`   ‚Ä¢ ${flowActionPayload.data.locations.length} ubicaciones`);
    console.log('   ‚Ä¢ Informaci√≥n del negocio completa');

} catch (error) {
    console.error('‚ùå Error generando datos del Flow:', error.message);
    console.log('\n‚ö†Ô∏è  Verificar que appointmentService est√© funcionando correctamente');
}